use Command::*;

use crate::opcodes::Operand::{Byte, DirectAddress, IndirectAddress, Register, Register16};

#[allow(non_camel_case_types)]
#[derive(Debug)]
pub enum Command {
    ADC(Operand),
    ADD(Operand),
    ADD_HL(Register16Id),
    ADD_SP,
    AND(Operand),
    BIT(u8, RegisterId),
    CALL,
    CALL_flag(FlagId),
    CCF,
    /// Compare with n
    CP(Operand),
    CPL,
    DAA,
    DEC(Operand),
    /// Disable interrupts
    DI,
    EI,
    INC(Operand),
    /// Jump
    JP,
    JP_flag(FlagId),
    JP_HL,
    /// Jump relative
    JR,
    JR_flag(FlagId),
    LD(Operand, Operand),
    LDD_A_HL,
    LDD_HL_A,
    LDI_A_HL,
    LDI_HL_A,
    LD_AC,
    LD_CA,
    LDH_An,
    LDH_nA,
    LD_SP_HL,
    LDHL,
    NOP,
    OR(Operand),
    POP(Register16Id),
    PUSH(Register16Id),
    RES(u8, RegisterId),
    RET,
    RET_flag(FlagId),
    RETI,
    RLA,
    RL(Operand),
    RLC(Operand),
    RLCA,
    RR(Operand),
    RRA,
    RRC(Operand),
    RRCA,
    RST(u8),
    SBC(Operand),
    SCF,
    SET(u8, RegisterId),
    SLA(Operand),
    SRA(Operand),
    SRL(Operand),
    STOP,
    SUB(Operand),
    SWAP(Operand),
    XOR(Operand),
}

#[derive(Debug)]
pub enum Operand {
    Byte,
    Register(RegisterId),
    Register16(Register16Id),
    /// nn
    DirectAddress,
    /// (nn), (BC) etc.
    IndirectAddress(Register16Id),
}

#[derive(Copy, Clone, Debug)]
pub enum RegisterId {
    A,
    B,
    C,
    D,
    E,
    H,
    L,
    HL,
}

#[derive(Copy, Clone, Debug)]
pub enum Register16Id {
    AF,
    BC,
    DE,
    HL,
    SP,
}

#[derive(Debug)]
pub enum FlagId {
    Z,
    NZ,
    NC,
    C,
}

impl TryFrom<(u8, u8)> for Command {
    type Error = ();

    fn try_from(opcodes: (u8, u8)) -> Result<Command, ()> {
        match opcodes.0 {
            0x00 => Ok(NOP),
            0x01 => Ok(LD(Register16(Register16Id::BC), Byte)),
            0x02 => Ok(LD(IndirectAddress(Register16Id::BC), Register(RegisterId::A))),
            0x03 => Ok(INC(Register16(Register16Id::BC))),
            0x04 => Ok(INC(Register(RegisterId::B))),
            0x05 => Ok(DEC(Register(RegisterId::B))),
            0x06 => Ok(LD(Register(RegisterId::B), Byte)),
            0x07 => Ok(RLCA),

            0x08 => Ok(LD(Byte, Register16(Register16Id::SP))),
            0x09 => Ok(ADD_HL(Register16Id::BC)),
            0x0A => Ok(LD(Register(RegisterId::A), IndirectAddress(Register16Id::BC))),
            0x0B => Ok(DEC(Register16(Register16Id::BC))),
            0x0C => Ok(INC(Register(RegisterId::C))),
            0x0D => Ok(DEC(Register(RegisterId::C))),
            0x0E => Ok(LD(Register(RegisterId::C), Byte)),
            0x0F => Ok(RRCA),

            0x10 => Ok(STOP),
            0x11 => Ok(LD(Register16(Register16Id::DE), Byte)),
            0x12 => Ok(LD(IndirectAddress(Register16Id::DE), Register(RegisterId::A))),
            0x13 => Ok(INC(Register16(Register16Id::DE))),
            0x14 => Ok(INC(Register(RegisterId::D))),
            0x15 => Ok(DEC(Register(RegisterId::D))),
            0x16 => Ok(LD(Register(RegisterId::D), Byte)),
            0x17 => Ok(RLA),

            0x18 => Ok(JR),
            0x19 => Ok(ADD_HL(Register16Id::DE)),
            0x1A => Ok(LD(Register(RegisterId::A), IndirectAddress(Register16Id::DE))),
            0x1B => Ok(DEC(Register16(Register16Id::DE))),
            0x1C => Ok(INC(Register(RegisterId::E))),
            0x1D => Ok(DEC(Register(RegisterId::E))),
            0x1E => Ok(LD(Register(RegisterId::E), Byte)),
            0x1F => Ok(RRA),

            0x20 => Ok(JR_flag(FlagId::NZ)),
            0x21 => Ok(LD(Register16(Register16Id::HL), Byte)),
            0x22 => Ok(LDI_HL_A),
            0x23 => Ok(INC(Register16(Register16Id::HL))),
            0x24 => Ok(INC(Register(RegisterId::H))),
            0x25 => Ok(DEC(Register(RegisterId::H))),
            0x26 => Ok(LD(Register(RegisterId::H), Byte)),
            0x27 => Ok(DAA),

            0x28 => Ok(JR_flag(FlagId::Z)),
            0x29 => Ok(ADD_HL(Register16Id::HL)),
            0x2A => Ok(LDI_A_HL),
            0x2B => Ok(DEC(Register16(Register16Id::HL))),
            0x2C => Ok(INC(Register(RegisterId::L))),
            0x2D => Ok(DEC(Register(RegisterId::L))),
            0x2E => Ok(LD(Register(RegisterId::L), Byte)),
            0x2F => Ok(CPL),

            0x30 => Ok(JR_flag(FlagId::NC)),
            0x31 => Ok(LD(Register16(Register16Id::SP), Byte)),
            0x32 => Ok(LDD_HL_A),
            0x33 => Ok(INC(Register16(Register16Id::SP))),
            0x34 => Ok(INC(IndirectAddress(Register16Id::HL))),
            0x35 => Ok(DEC(IndirectAddress(Register16Id::HL))),
            0x36 => Ok(LD(IndirectAddress(Register16Id::HL), Byte)),
            0x37 => Ok(SCF),

            0x38 => Ok(JR_flag(FlagId::C)),
            0x39 => Ok(ADD_HL(Register16Id::SP)),
            0x3A => Ok(LDD_A_HL),
            0x3B => Ok(DEC(Register16(Register16Id::SP))),
            0x3C => Ok(INC(Register(RegisterId::A))),
            0x3D => Ok(DEC(Register(RegisterId::A))),
            0x3E => Ok(LD(Register(RegisterId::A), Byte)),
            0x3F => Ok(CCF),

            0x40 => Ok(LD(Register(RegisterId::B), Register(RegisterId::B))),
            0x41 => Ok(LD(Register(RegisterId::B), Register(RegisterId::C))),
            0x42 => Ok(LD(Register(RegisterId::B), Register(RegisterId::D))),
            0x43 => Ok(LD(Register(RegisterId::B), Register(RegisterId::E))),
            0x44 => Ok(LD(Register(RegisterId::B), Register(RegisterId::H))),
            0x45 => Ok(LD(Register(RegisterId::B), Register(RegisterId::L))),
            0x46 => Ok(LD(Register(RegisterId::B), IndirectAddress(Register16Id::HL))),
            0x47 => Ok(LD(Register(RegisterId::B), Register(RegisterId::A))),

            0x48 => Ok(LD(Register(RegisterId::C), Register(RegisterId::B))),
            0x49 => Ok(LD(Register(RegisterId::C), Register(RegisterId::C))),
            0x4A => Ok(LD(Register(RegisterId::C), Register(RegisterId::D))),
            0x4B => Ok(LD(Register(RegisterId::C), Register(RegisterId::E))),
            0x4C => Ok(LD(Register(RegisterId::C), Register(RegisterId::H))),
            0x4D => Ok(LD(Register(RegisterId::C), Register(RegisterId::L))),
            0x4E => Ok(LD(Register(RegisterId::C), IndirectAddress(Register16Id::HL))),
            0x4F => Ok(LD(Register(RegisterId::C), Register(RegisterId::A))),

            0x50 => Ok(LD(Register(RegisterId::D), Register(RegisterId::B))),
            0x51 => Ok(LD(Register(RegisterId::D), Register(RegisterId::C))),
            0x52 => Ok(LD(Register(RegisterId::D), Register(RegisterId::D))),
            0x53 => Ok(LD(Register(RegisterId::D), Register(RegisterId::E))),
            0x54 => Ok(LD(Register(RegisterId::D), Register(RegisterId::H))),
            0x55 => Ok(LD(Register(RegisterId::D), Register(RegisterId::L))),
            0x56 => Ok(LD(Register(RegisterId::D), IndirectAddress(Register16Id::HL))),
            0x57 => Ok(LD(Register(RegisterId::D), Register(RegisterId::A))),

            0x58 => Ok(LD(Register(RegisterId::E), Register(RegisterId::B))),
            0x59 => Ok(LD(Register(RegisterId::E), Register(RegisterId::C))),
            0x5A => Ok(LD(Register(RegisterId::E), Register(RegisterId::D))),
            0x5B => Ok(LD(Register(RegisterId::E), Register(RegisterId::E))),
            0x5C => Ok(LD(Register(RegisterId::E), Register(RegisterId::H))),
            0x5D => Ok(LD(Register(RegisterId::E), Register(RegisterId::L))),
            0x5E => Ok(LD(Register(RegisterId::E), IndirectAddress(Register16Id::HL))),
            0x5F => Ok(LD(Register(RegisterId::E), Register(RegisterId::A))),

            0x60 => Ok(LD(Register(RegisterId::H), Register(RegisterId::B))),
            0x61 => Ok(LD(Register(RegisterId::H), Register(RegisterId::C))),
            0x62 => Ok(LD(Register(RegisterId::H), Register(RegisterId::D))),
            0x63 => Ok(LD(Register(RegisterId::H), Register(RegisterId::E))),
            0x64 => Ok(LD(Register(RegisterId::H), Register(RegisterId::H))),
            0x65 => Ok(LD(Register(RegisterId::H), Register(RegisterId::L))),
            0x66 => Ok(LD(Register(RegisterId::H), IndirectAddress(Register16Id::HL))),
            0x67 => Ok(LD(Register(RegisterId::H), Register(RegisterId::A))),

            0x68 => Ok(LD(Register(RegisterId::L), Register(RegisterId::B))),
            0x69 => Ok(LD(Register(RegisterId::L), Register(RegisterId::C))),
            0x6A => Ok(LD(Register(RegisterId::L), Register(RegisterId::D))),
            0x6B => Ok(LD(Register(RegisterId::L), Register(RegisterId::E))),
            0x6C => Ok(LD(Register(RegisterId::L), Register(RegisterId::H))),
            0x6D => Ok(LD(Register(RegisterId::L), Register(RegisterId::L))),
            0x6E => Ok(LD(Register(RegisterId::L), IndirectAddress(Register16Id::HL))),
            0x6F => Ok(LD(Register(RegisterId::L), Register(RegisterId::A))),

            0x70 => Ok(LD(IndirectAddress(Register16Id::HL), Register(RegisterId::B))),
            0x71 => Ok(LD(IndirectAddress(Register16Id::HL), Register(RegisterId::C))),
            0x72 => Ok(LD(IndirectAddress(Register16Id::HL), Register(RegisterId::D))),
            0x73 => Ok(LD(IndirectAddress(Register16Id::HL), Register(RegisterId::E))),
            0x74 => Ok(LD(IndirectAddress(Register16Id::HL), Register(RegisterId::H))),
            0x75 => Ok(LD(IndirectAddress(Register16Id::HL), Register(RegisterId::L))),
            0x76 => todo!(),
            0x77 => Ok(LD(IndirectAddress(Register16Id::HL), Register(RegisterId::A))),

            0x78 => Ok(LD(Register(RegisterId::A), Register(RegisterId::B))),
            0x79 => Ok(LD(Register(RegisterId::A), Register(RegisterId::C))),
            0x7A => Ok(LD(Register(RegisterId::A), Register(RegisterId::D))),
            0x7B => Ok(LD(Register(RegisterId::A), Register(RegisterId::E))),
            0x7C => Ok(LD(Register(RegisterId::A), Register(RegisterId::H))),
            0x7D => Ok(LD(Register(RegisterId::A), Register(RegisterId::L))),
            0x7E => Ok(LD(Register(RegisterId::A), IndirectAddress(Register16Id::HL))),
            0x7F => Ok(LD(Register(RegisterId::A), Register(RegisterId::A))),

            0x80 => Ok(ADD(Register(RegisterId::B))),
            0x81 => Ok(ADD(Register(RegisterId::C))),
            0x82 => Ok(ADD(Register(RegisterId::D))),
            0x83 => Ok(ADD(Register(RegisterId::E))),
            0x84 => Ok(ADD(Register(RegisterId::H))),
            0x85 => Ok(ADD(Register(RegisterId::L))),
            0x86 => Ok(ADD(Register(RegisterId::HL))),
            0x87 => Ok(ADD(Register(RegisterId::A))),

            0x88 => Ok(ADC(Register(RegisterId::B))),
            0x89 => Ok(ADC(Register(RegisterId::C))),
            0x8A => Ok(ADC(Register(RegisterId::D))),
            0x8B => Ok(ADC(Register(RegisterId::E))),
            0x8C => Ok(ADC(Register(RegisterId::H))),
            0x8D => Ok(ADC(Register(RegisterId::L))),
            0x8E => Ok(ADC(Register(RegisterId::HL))),
            0x8F => Ok(ADC(Register(RegisterId::A))),

            0x90 => Ok(SUB(Register(RegisterId::B))),
            0x91 => Ok(SUB(Register(RegisterId::C))),
            0x92 => Ok(SUB(Register(RegisterId::D))),
            0x93 => Ok(SUB(Register(RegisterId::E))),
            0x94 => Ok(SUB(Register(RegisterId::H))),
            0x95 => Ok(SUB(Register(RegisterId::L))),
            0x96 => Ok(SUB(Register(RegisterId::HL))),
            0x97 => Ok(SUB(Register(RegisterId::A))),

            0x98 => Ok(SBC(Register(RegisterId::B))),
            0x99 => Ok(SBC(Register(RegisterId::C))),
            0x9A => Ok(SBC(Register(RegisterId::D))),
            0x9B => Ok(SBC(Register(RegisterId::E))),
            0x9C => Ok(SBC(Register(RegisterId::H))),
            0x9D => Ok(SBC(Register(RegisterId::L))),
            0x9E => Ok(SBC(Register(RegisterId::HL))),
            0x9F => Ok(SBC(Register(RegisterId::A))),

            0xA0 => Ok(AND(Register(RegisterId::B))),
            0xA1 => Ok(AND(Register(RegisterId::C))),
            0xA2 => Ok(AND(Register(RegisterId::D))),
            0xA3 => Ok(AND(Register(RegisterId::E))),
            0xA4 => Ok(AND(Register(RegisterId::H))),
            0xA5 => Ok(AND(Register(RegisterId::L))),
            0xA6 => Ok(AND(Register(RegisterId::HL))),
            0xA7 => Ok(AND(Register(RegisterId::A))),

            0xA8 => Ok(XOR(Register(RegisterId::B))),
            0xA9 => Ok(XOR(Register(RegisterId::C))),
            0xAA => Ok(XOR(Register(RegisterId::D))),
            0xAB => Ok(XOR(Register(RegisterId::E))),
            0xAC => Ok(XOR(Register(RegisterId::H))),
            0xAD => Ok(XOR(Register(RegisterId::L))),
            0xAE => Ok(XOR(Register(RegisterId::HL))),
            0xAF => Ok(XOR(Register(RegisterId::A))),

            0xB0 => Ok(OR(Register(RegisterId::B))),
            0xB1 => Ok(OR(Register(RegisterId::C))),
            0xB2 => Ok(OR(Register(RegisterId::D))),
            0xB3 => Ok(OR(Register(RegisterId::E))),
            0xB4 => Ok(OR(Register(RegisterId::H))),
            0xB5 => Ok(OR(Register(RegisterId::L))),
            0xB6 => Ok(OR(Register(RegisterId::HL))),
            0xB7 => Ok(OR(Register(RegisterId::A))),

            0xB8 => Ok(CP(Register(RegisterId::B))),
            0xB9 => Ok(CP(Register(RegisterId::C))),
            0xBA => Ok(CP(Register(RegisterId::D))),
            0xBB => Ok(CP(Register(RegisterId::E))),
            0xBC => Ok(CP(Register(RegisterId::H))),
            0xBD => Ok(CP(Register(RegisterId::L))),
            0xBE => Ok(CP(Register(RegisterId::HL))),
            0xBF => Ok(CP(Register(RegisterId::A))),

            0xC0 => Ok(RET_flag(FlagId::NZ)),
            0xC1 => Ok(POP(Register16Id::BC)),
            0xC2 => Ok(JP_flag(FlagId::NZ)),
            0xC3 => Ok(JP),
            0xC4 => Ok(CALL_flag(FlagId::NZ)),
            0xC5 => Ok(PUSH(Register16Id::BC)),
            0xC6 => Ok(ADD(Byte)),
            0xC7 => Ok(RST(0x00)),

            0xC8 => Ok(RET_flag(FlagId::Z)),
            0xC9 => Ok(RET),
            0xCA => Ok(JP_flag(FlagId::Z)),
            0xCB => try_from_cb(opcodes.1),
            0xCC => Ok(CALL_flag(FlagId::Z)),
            0xCD => Ok(CALL),
            0xCE => Ok(ADC(Byte)),
            0xCF => Ok(RST(0x08)),

            0xD0 => Ok(RET_flag(FlagId::NC)),
            0xD1 => Ok(POP(Register16Id::DE)),
            0xD2 => Ok(JP_flag(FlagId::NC)),
            // 0xD3 not used
            0xD4 => Ok(CALL_flag(FlagId::NC)),
            0xD5 => Ok(PUSH(Register16Id::DE)),
            0xD6 => Ok(SUB(Byte)),
            0xD7 => Ok(RST(0x10)),

            0xD8 => Ok(RET_flag(FlagId::C)),
            0xD9 => Ok(RETI),
            0xDA => Ok(JP_flag(FlagId::C)),
            // 0xDB not used
            0xDC => Ok(CALL_flag(FlagId::C)),
            // 0xDD not used
            0xDE => Ok(SBC(Byte)),
            0xDF => Ok(RST(0x18)),

            0xE0 => Ok(LDH_nA),
            0xE1 => Ok(POP(Register16Id::HL)),
            0xE2 => Ok(LD_CA),
            // 0xE3 not used
            // 0xE4 not used
            0xE5 => Ok(PUSH(Register16Id::HL)),
            0xE6 => Ok(AND(Byte)),
            0xE7 => Ok(RST(0x20)),

            0xE8 => Ok(ADD_SP),
            0xE9 => Ok(JP_HL),
            0xEA => Ok(LD(DirectAddress, Register(RegisterId::A))),
            // 0xEB not used
            // 0xEC not used
            // 0xED not used
            0xEE => Ok(XOR(Byte)),
            0xEF => Ok(RST(0x28)),

            0xF0 => Ok(LDH_An),
            0xF1 => Ok(POP(Register16Id::AF)),
            0xF2 => Ok(LD_AC),
            0xF3 => Ok(DI),
            // 0xF4 not used
            0xF5 => Ok(PUSH(Register16Id::AF)),
            0xF6 => Ok(OR(Byte)),
            0xF7 => Ok(RST(0x30)),

            0xF8 => Ok(LDHL),
            0xF9 => Ok(LD_SP_HL),
            0xFA => Ok(LD(Register(RegisterId::A), DirectAddress)),
            0xFB => Ok(EI),
            // 0xFC not used
            // 0xFD not used
            0xFE => Ok(CP(Byte)),
            0xFF => Ok(RST(0x38)),

            _ => Err(()),
        }
    }
}

fn try_from_cb(opcode: u8) -> Result<Command, ()> {
    match opcode {
        0x00 => Ok(RLC(Register(RegisterId::B))),
        0x01 => Ok(RLC(Register(RegisterId::C))),
        0x02 => Ok(RLC(Register(RegisterId::D))),
        0x03 => Ok(RLC(Register(RegisterId::E))),
        0x04 => Ok(RLC(Register(RegisterId::H))),
        0x05 => Ok(RLC(Register(RegisterId::L))),
        0x06 => Ok(RLC(IndirectAddress(Register16Id::HL))),
        0x07 => Ok(RLC(Register(RegisterId::A))),
        0x08 => Ok(RRC(Register(RegisterId::B))),
        0x09 => Ok(RRC(Register(RegisterId::C))),
        0x0A => Ok(RRC(Register(RegisterId::D))),
        0x0B => Ok(RRC(Register(RegisterId::E))),
        0x0C => Ok(RRC(Register(RegisterId::H))),
        0x0D => Ok(RRC(Register(RegisterId::L))),
        0x0E => Ok(RRC(IndirectAddress(Register16Id::HL))),
        0x0F => Ok(RRC(Register(RegisterId::A))),

        0x10 => Ok(RL(Register(RegisterId::B))),
        0x11 => Ok(RL(Register(RegisterId::C))),
        0x12 => Ok(RL(Register(RegisterId::D))),
        0x13 => Ok(RL(Register(RegisterId::E))),
        0x14 => Ok(RL(Register(RegisterId::H))),
        0x15 => Ok(RL(Register(RegisterId::L))),
        0x16 => Ok(RL(IndirectAddress(Register16Id::HL))),
        0x17 => Ok(RL(Register(RegisterId::A))),
        0x18 => Ok(RR(Register(RegisterId::B))),
        0x19 => Ok(RR(Register(RegisterId::C))),
        0x1A => Ok(RR(Register(RegisterId::D))),
        0x1B => Ok(RR(Register(RegisterId::E))),
        0x1C => Ok(RR(Register(RegisterId::H))),
        0x1D => Ok(RR(Register(RegisterId::L))),
        0x1E => Ok(RR(IndirectAddress(Register16Id::HL))),
        0x1F => Ok(RR(Register(RegisterId::A))),

        0x20 => Ok(SLA(Register(RegisterId::B))),
        0x21 => Ok(SLA(Register(RegisterId::C))),
        0x22 => Ok(SLA(Register(RegisterId::D))),
        0x23 => Ok(SLA(Register(RegisterId::E))),
        0x24 => Ok(SLA(Register(RegisterId::H))),
        0x25 => Ok(SLA(Register(RegisterId::L))),
        0x26 => Ok(SLA(IndirectAddress(Register16Id::HL))),
        0x27 => Ok(SLA(Register(RegisterId::A))),
        0x28 => Ok(SRA(Register(RegisterId::B))),
        0x29 => Ok(SRA(Register(RegisterId::C))),
        0x2A => Ok(SRA(Register(RegisterId::D))),
        0x2B => Ok(SRA(Register(RegisterId::E))),
        0x2C => Ok(SRA(Register(RegisterId::H))),
        0x2D => Ok(SRA(Register(RegisterId::L))),
        0x2E => Ok(SRA(IndirectAddress(Register16Id::HL))),
        0x2F => Ok(SRA(Register(RegisterId::A))),

        0x30 => Ok(SWAP(Register(RegisterId::B))),
        0x31 => Ok(SWAP(Register(RegisterId::C))),
        0x32 => Ok(SWAP(Register(RegisterId::D))),
        0x33 => Ok(SWAP(Register(RegisterId::E))),
        0x34 => Ok(SWAP(Register(RegisterId::H))),
        0x35 => Ok(SWAP(Register(RegisterId::L))),
        0x36 => Ok(SWAP(IndirectAddress(Register16Id::HL))),
        0x37 => Ok(SWAP(Register(RegisterId::A))),
        0x38 => Ok(SRL(Register(RegisterId::B))),
        0x39 => Ok(SRL(Register(RegisterId::C))),
        0x3A => Ok(SRL(Register(RegisterId::D))),
        0x3B => Ok(SRL(Register(RegisterId::E))),
        0x3C => Ok(SRL(Register(RegisterId::H))),
        0x3D => Ok(SRL(Register(RegisterId::L))),
        0x3E => Ok(SRL(IndirectAddress(Register16Id::HL))),
        0x3F => Ok(SRL(Register(RegisterId::A))),

        0x40 => Ok(BIT(0, RegisterId::B)),
        0x41 => Ok(BIT(0, RegisterId::C)),
        0x42 => Ok(BIT(0, RegisterId::D)),
        0x43 => Ok(BIT(0, RegisterId::E)),
        0x44 => Ok(BIT(0, RegisterId::H)),
        0x45 => Ok(BIT(0, RegisterId::L)),
        0x46 => Ok(BIT(0, RegisterId::HL)),
        0x47 => Ok(BIT(0, RegisterId::A)),
        0x48 => Ok(BIT(1, RegisterId::B)),
        0x49 => Ok(BIT(1, RegisterId::C)),
        0x4A => Ok(BIT(1, RegisterId::D)),
        0x4B => Ok(BIT(1, RegisterId::E)),
        0x4C => Ok(BIT(1, RegisterId::H)),
        0x4D => Ok(BIT(1, RegisterId::L)),
        0x4E => Ok(BIT(1, RegisterId::HL)),
        0x4F => Ok(BIT(1, RegisterId::A)),

        0x50 => Ok(BIT(2, RegisterId::B)),
        0x51 => Ok(BIT(2, RegisterId::C)),
        0x52 => Ok(BIT(2, RegisterId::D)),
        0x53 => Ok(BIT(2, RegisterId::E)),
        0x54 => Ok(BIT(2, RegisterId::H)),
        0x55 => Ok(BIT(2, RegisterId::L)),
        0x56 => Ok(BIT(2, RegisterId::HL)),
        0x57 => Ok(BIT(2, RegisterId::A)),
        0x58 => Ok(BIT(3, RegisterId::B)),
        0x59 => Ok(BIT(3, RegisterId::C)),
        0x5A => Ok(BIT(3, RegisterId::D)),
        0x5B => Ok(BIT(3, RegisterId::E)),
        0x5C => Ok(BIT(3, RegisterId::H)),
        0x5D => Ok(BIT(3, RegisterId::L)),
        0x5E => Ok(BIT(3, RegisterId::HL)),
        0x5F => Ok(BIT(3, RegisterId::A)),

        0x60 => Ok(BIT(4, RegisterId::B)),
        0x61 => Ok(BIT(4, RegisterId::C)),
        0x62 => Ok(BIT(4, RegisterId::D)),
        0x63 => Ok(BIT(4, RegisterId::E)),
        0x64 => Ok(BIT(4, RegisterId::H)),
        0x65 => Ok(BIT(4, RegisterId::L)),
        0x66 => Ok(BIT(4, RegisterId::HL)),
        0x67 => Ok(BIT(4, RegisterId::A)),
        0x68 => Ok(BIT(5, RegisterId::B)),
        0x69 => Ok(BIT(5, RegisterId::C)),
        0x6A => Ok(BIT(5, RegisterId::D)),
        0x6B => Ok(BIT(5, RegisterId::E)),
        0x6C => Ok(BIT(5, RegisterId::H)),
        0x6D => Ok(BIT(5, RegisterId::L)),
        0x6E => Ok(BIT(5, RegisterId::HL)),
        0x6F => Ok(BIT(5, RegisterId::A)),

        0x70 => Ok(BIT(6, RegisterId::B)),
        0x71 => Ok(BIT(6, RegisterId::C)),
        0x72 => Ok(BIT(6, RegisterId::D)),
        0x73 => Ok(BIT(6, RegisterId::E)),
        0x74 => Ok(BIT(6, RegisterId::H)),
        0x75 => Ok(BIT(6, RegisterId::L)),
        0x76 => Ok(BIT(6, RegisterId::HL)),
        0x77 => Ok(BIT(6, RegisterId::A)),
        0x78 => Ok(BIT(7, RegisterId::B)),
        0x79 => Ok(BIT(7, RegisterId::C)),
        0x7A => Ok(BIT(7, RegisterId::D)),
        0x7B => Ok(BIT(7, RegisterId::E)),
        0x7C => Ok(BIT(7, RegisterId::H)),
        0x7D => Ok(BIT(7, RegisterId::L)),
        0x7E => Ok(BIT(7, RegisterId::HL)),
        0x7F => Ok(BIT(7, RegisterId::A)),

        0x80 => Ok(RES(0, RegisterId::B)),
        0x81 => Ok(RES(0, RegisterId::C)),
        0x82 => Ok(RES(0, RegisterId::D)),
        0x83 => Ok(RES(0, RegisterId::E)),
        0x84 => Ok(RES(0, RegisterId::H)),
        0x85 => Ok(RES(0, RegisterId::L)),
        0x86 => Ok(RES(0, RegisterId::HL)),
        0x87 => Ok(RES(0, RegisterId::A)),
        0x88 => Ok(RES(1, RegisterId::B)),
        0x89 => Ok(RES(1, RegisterId::C)),
        0x8A => Ok(RES(1, RegisterId::D)),
        0x8B => Ok(RES(1, RegisterId::E)),
        0x8C => Ok(RES(1, RegisterId::H)),
        0x8D => Ok(RES(1, RegisterId::L)),
        0x8E => Ok(RES(1, RegisterId::HL)),
        0x8F => Ok(RES(1, RegisterId::A)),

        0x90 => Ok(RES(2, RegisterId::B)),
        0x91 => Ok(RES(2, RegisterId::C)),
        0x92 => Ok(RES(2, RegisterId::D)),
        0x93 => Ok(RES(2, RegisterId::E)),
        0x94 => Ok(RES(2, RegisterId::H)),
        0x95 => Ok(RES(2, RegisterId::L)),
        0x96 => Ok(RES(2, RegisterId::HL)),
        0x97 => Ok(RES(2, RegisterId::A)),
        0x98 => Ok(RES(3, RegisterId::B)),
        0x99 => Ok(RES(3, RegisterId::C)),
        0x9A => Ok(RES(3, RegisterId::D)),
        0x9B => Ok(RES(3, RegisterId::E)),
        0x9C => Ok(RES(3, RegisterId::H)),
        0x9D => Ok(RES(3, RegisterId::L)),
        0x9E => Ok(RES(3, RegisterId::HL)),
        0x9F => Ok(RES(3, RegisterId::A)),

        0xA0 => Ok(RES(4, RegisterId::B)),
        0xA1 => Ok(RES(4, RegisterId::C)),
        0xA2 => Ok(RES(4, RegisterId::D)),
        0xA3 => Ok(RES(4, RegisterId::E)),
        0xA4 => Ok(RES(4, RegisterId::H)),
        0xA5 => Ok(RES(4, RegisterId::L)),
        0xA6 => Ok(RES(4, RegisterId::HL)),
        0xA7 => Ok(RES(4, RegisterId::A)),
        0xA8 => Ok(RES(5, RegisterId::B)),
        0xA9 => Ok(RES(5, RegisterId::C)),
        0xAA => Ok(RES(5, RegisterId::D)),
        0xAB => Ok(RES(5, RegisterId::E)),
        0xAC => Ok(RES(5, RegisterId::H)),
        0xAD => Ok(RES(5, RegisterId::L)),
        0xAE => Ok(RES(5, RegisterId::HL)),
        0xAF => Ok(RES(5, RegisterId::A)),

        0xB0 => Ok(RES(6, RegisterId::B)),
        0xB1 => Ok(RES(6, RegisterId::C)),
        0xB2 => Ok(RES(6, RegisterId::D)),
        0xB3 => Ok(RES(6, RegisterId::E)),
        0xB4 => Ok(RES(6, RegisterId::H)),
        0xB5 => Ok(RES(6, RegisterId::L)),
        0xB6 => Ok(RES(6, RegisterId::HL)),
        0xB7 => Ok(RES(6, RegisterId::A)),
        0xB8 => Ok(RES(7, RegisterId::B)),
        0xB9 => Ok(RES(7, RegisterId::C)),
        0xBA => Ok(RES(7, RegisterId::D)),
        0xBB => Ok(RES(7, RegisterId::E)),
        0xBC => Ok(RES(7, RegisterId::H)),
        0xBD => Ok(RES(7, RegisterId::L)),
        0xBE => Ok(RES(7, RegisterId::HL)),
        0xBF => Ok(RES(7, RegisterId::A)),

        0xC0 => Ok(SET(0, RegisterId::B)),
        0xC1 => Ok(SET(0, RegisterId::C)),
        0xC2 => Ok(SET(0, RegisterId::D)),
        0xC3 => Ok(SET(0, RegisterId::E)),
        0xC4 => Ok(SET(0, RegisterId::H)),
        0xC5 => Ok(SET(0, RegisterId::L)),
        0xC6 => Ok(SET(0, RegisterId::HL)),
        0xC7 => Ok(SET(0, RegisterId::A)),
        0xC8 => Ok(SET(1, RegisterId::B)),
        0xC9 => Ok(SET(1, RegisterId::C)),
        0xCA => Ok(SET(1, RegisterId::D)),
        0xCB => Ok(SET(1, RegisterId::E)),
        0xCC => Ok(SET(1, RegisterId::H)),
        0xCD => Ok(SET(1, RegisterId::L)),
        0xCE => Ok(SET(1, RegisterId::HL)),
        0xCF => Ok(SET(1, RegisterId::A)),

        0xD0 => Ok(SET(2, RegisterId::B)),
        0xD1 => Ok(SET(2, RegisterId::C)),
        0xD2 => Ok(SET(2, RegisterId::D)),
        0xD3 => Ok(SET(2, RegisterId::E)),
        0xD4 => Ok(SET(2, RegisterId::H)),
        0xD5 => Ok(SET(2, RegisterId::L)),
        0xD6 => Ok(SET(2, RegisterId::HL)),
        0xD7 => Ok(SET(2, RegisterId::A)),
        0xD8 => Ok(SET(3, RegisterId::B)),
        0xD9 => Ok(SET(3, RegisterId::C)),
        0xDA => Ok(SET(3, RegisterId::D)),
        0xDB => Ok(SET(3, RegisterId::E)),
        0xDC => Ok(SET(3, RegisterId::H)),
        0xDD => Ok(SET(3, RegisterId::L)),
        0xDE => Ok(SET(3, RegisterId::HL)),
        0xDF => Ok(SET(3, RegisterId::A)),

        0xE0 => Ok(SET(4, RegisterId::B)),
        0xE1 => Ok(SET(4, RegisterId::C)),
        0xE2 => Ok(SET(4, RegisterId::D)),
        0xE3 => Ok(SET(4, RegisterId::E)),
        0xE4 => Ok(SET(4, RegisterId::H)),
        0xE5 => Ok(SET(4, RegisterId::L)),
        0xE6 => Ok(SET(4, RegisterId::HL)),
        0xE7 => Ok(SET(4, RegisterId::A)),
        0xE8 => Ok(SET(5, RegisterId::B)),
        0xE9 => Ok(SET(5, RegisterId::C)),
        0xEA => Ok(SET(5, RegisterId::D)),
        0xEB => Ok(SET(5, RegisterId::E)),
        0xEC => Ok(SET(5, RegisterId::H)),
        0xED => Ok(SET(5, RegisterId::L)),
        0xEE => Ok(SET(5, RegisterId::HL)),
        0xEF => Ok(SET(5, RegisterId::A)),

        0xF0 => Ok(SET(6, RegisterId::B)),
        0xF1 => Ok(SET(6, RegisterId::C)),
        0xF2 => Ok(SET(6, RegisterId::D)),
        0xF3 => Ok(SET(6, RegisterId::E)),
        0xF4 => Ok(SET(6, RegisterId::H)),
        0xF5 => Ok(SET(6, RegisterId::L)),
        0xF6 => Ok(SET(6, RegisterId::HL)),
        0xF7 => Ok(SET(6, RegisterId::A)),
        0xF8 => Ok(SET(7, RegisterId::B)),
        0xF9 => Ok(SET(7, RegisterId::C)),
        0xFA => Ok(SET(7, RegisterId::D)),
        0xFB => Ok(SET(7, RegisterId::E)),
        0xFC => Ok(SET(7, RegisterId::H)),
        0xFD => Ok(SET(7, RegisterId::L)),
        0xFE => Ok(SET(7, RegisterId::HL)),
        0xFF => Ok(SET(7, RegisterId::A)),
    }
}
